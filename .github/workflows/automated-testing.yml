name: Automated Testing Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: app/app-agent-xcom-template/package-lock.json

      - name: Install dependencies
        run: |
          cd app/app-agent-xcom-template
          npm ci

      - name: Run linting
        run: |
          cd app/app-agent-xcom-template
          npm run lint

      - name: Run type checking
        run: |
          cd app/app-agent-xcom-template
          npm run type-check

      - name: Run unit tests
        run: |
          cd app/app-agent-xcom-template
          npm run test:unit

      - name: Run integration tests
        run: |
          cd app/app-agent-xcom-template
          npm run test:integration

      - name: Run end-to-end tests
        run: |
          cd app/app-agent-xcom-template
          npm run test:e2e

      - name: Generate test coverage
        run: |
          cd app/app-agent-xcom-template
          npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: app/app-agent-xcom-template/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  security-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: |
          cd app/app-agent-xcom-template
          npm audit --audit-level=moderate

      - name: Run SAST scan
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  performance-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd app/app-agent-xcom-template
          npm ci

      - name: Run performance tests
        run: |
          cd app/app-agent-xcom-template
          npm run test:performance

      - name: Generate performance report
        run: |
          cd app/app-agent-xcom-template
          npm run perf:report

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-report-${{ github.run_number }}
          path: app/app-agent-xcom-template/performance-report.json

  docker-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          cd app/app-agent-xcom-template
          docker build -t template-bot:test .

      - name: Run Docker container tests
        run: |
          cd app/app-agent-xcom-template
          docker run --rm template-bot:test npm test

      - name: Test Docker health check
        run: |
          cd app/app-agent-xcom-template
          docker run -d --name test-bot template-bot:test
          sleep 10
          docker exec test-bot curl -f http://localhost:3000/health
          docker stop test-bot
          docker rm test-bot
